@page
@model HoldemModel
@{
}
<h1>Play Texas Holdem!</h1>
<form id="myForm" method="post">

    @if (!String.IsNullOrEmpty(Model.Card0))
    {
        <img id="myCard0" src="images/@(Model.Card0).png" width="48" height="60" />
    }
    else
    {
        <img id="myCard0" src="images/cardback.png" width="48" height="60" />
    }
    @if (!String.IsNullOrEmpty(Model.Card1))
    {
        <img id="myCard1" src="images/@(Model.Card1).png" width="48" height="60" />
    }
    else
    {
        <img id="myCard1" src="images/cardback.png" width="48" height="60" />
    }
    <div>Pocket Cards</div>
    <div id="test"></div>
    <p></p>

    @if (!String.IsNullOrEmpty(Model.Flop0))
    {
        <img id="myCard2" src="images/@(Model.Flop0).png" width="48" height="60" />
    }
    else
    {
        <img id="myCard2" src="images/cardback.png" width="48" height="60" />
    }
    @if (!String.IsNullOrEmpty(Model.Flop1))
    {
        <img id="myCard3" src="images/@(Model.Flop1).png" width="48" height="60" />
    }
    else
    {
        <img id="myCard3" src="images/cardback.png" width="48" height="60" />
    }
    @if (!String.IsNullOrEmpty(Model.Flop2))
    {
        <img id="myCard4" src="images/@(Model.Flop2).png" width="48" height="60" />
    }
    else
    {
        <img id="myCard4" src="images/cardback.png" width="48" height="60" />
    }

    <div>Flop</div>
    <p></p>
    @if (!String.IsNullOrEmpty(Model.Turn))
    {
        <img id="myCard5" src="images/@(Model.Turn).png" width="48" height="60" />
    }
    else
    {
        <img id="myCard5" src="images/cardback.png" width="48" height="60" />
    }
    <div>Turn</div>
    <p></p>
    @if (!String.IsNullOrEmpty(Model.River))
    {
        <img id="myCard6" src="images/@(Model.River).png" width="48" height="60" />
    }
    else
    {
        <img id="myCard6" src="images/cardback.png" width="48" height="60" />
    }
    <div>River</div>

    <input id="myCardHidden0" type="hidden" asp-for="Hand.MyCard0Id" />
    <input id="myCardHidden1" type="hidden" asp-for="Hand.MyCard1Id" />
    <input id="myCardHidden2" type="hidden" asp-for="Hand.Flop0" />
    <input id="myCardHidden3" type="hidden" asp-for="Hand.Flop1" />
    <input id="myCardHidden4" type="hidden" asp-for="Hand.Flop2" />
    <input id="myCardHidden5" type="hidden" asp-for="Hand.Turn" />
    <input id="myCardHidden6" type="hidden" asp-for="Hand.River" />
</form>

<a id="AS">
    <img src="images/AS.png" width="48" height="60" />
</a>
<a id="KS">
    <img src="images/KS.png" width="48" height="60" />
</a>
<a id="QS">
    <img src="images/QS.png" width="48" height="60" />
</a>
<a id="JS">
    <img src="images/JS.png" width="48" height="60" />
</a>
<a id="10S">
    <img src="images/10S.png" width="48" height="60" />
</a>
<a id="9S">
    <img src="images/9S.png" width="48" height="60" />
</a>
<a id="8S">
    <img src="images/8S.png" width="48" height="60" />
</a>
<a id="7S">
    <img src="images/7S.png" width="48" height="60" />
</a>
<a id="6S">
    <img src="images/6S.png" width="48" height="60" />
</a>
<a id="5S">
    <img src="images/5S.png" width="48" height="60" />
</a>
<a id="4S">
    <img src="images/4S.png" width="48" height="60" />
</a>
<a id="3S">
    <img src="images/3S.png" width="48" height="60" />
</a>
<a id="2S">
    <img src="images/2S.png" width="48" height="60" />
</a>
<p></p>
<a id="AH">
    <img src="images/AH.png" width="48" height="60" />
</a>
<a id="KH">
    <img src="images/KH.png" width="48" height="60" />
</a>
<a id="QH">
    <img src="images/QH.png" width="48" height="60" />
</a>
<a id="JH">
    <img src="images/JH.png" width="48" height="60" />
</a>
<a id="10H">
    <img src="images/10H.png" width="48" height="60" />
</a>
<a id="9H">
    <img src="images/9H.png" width="48" height="60" />
</a>
<a id="8H">
    <img src="images/8H.png" width="48" height="60" />
</a>
<a id="7H">
    <img src="images/7H.png" width="48" height="60" />
</a>
<a id="6H">
    <img src="images/6H.png" width="48" height="60" />
</a>
<a id="5H">
    <img src="images/5H.png" width="48" height="60" />
</a>
<a id="4H">
    <img src="images/4H.png" width="48" height="60" />
</a>
<a id="3H">
    <img src="images/3H.png" width="48" height="60" />
</a>
<a id="2H">
    <img src="images/2H.png" width="48" height="60" />
</a>
<p></p>
<a id="AC">
    <img src="images/AC.png" width="48" height="60" />
</a>
<a id="KC">
    <img src="images/KC.png" width="48" height="60" />
</a>
<a id="QC">
    <img src="images/QC.png" width="48" height="60" />
</a>
<a id="JC">
    <img src="images/JC.png" width="48" height="60" />
</a>
<a id="10C">
    <img src="images/10C.png" width="48" height="60" />
</a>
<a id="9C">
    <img src="images/9C.png" width="48" height="60" />
</a>
<a id="8C">
    <img src="images/8C.png" width="48" height="60" />
</a>
<a id="7C">
    <img src="images/7C.png" width="48" height="60" />
</a>
<a id="6C">
    <img src="images/6C.png" width="48" height="60" />
</a>
<a id="5C">
    <img src="images/5C.png" width="48" height="60" />
</a>
<a id="4C">
    <img src="images/4C.png" width="48" height="60" />
</a>
<a id="3C">
    <img src="images/3C.png" width="48" height="60" />
</a>
<a id="2C">
    <img src="images/2C.png" width="48" height="60" />
</a>
<p></p>
<a id="AD">
    <img src="images/AD.png" width="48" height="60" />
</a>
<a id="KD">
    <img src="images/KD.png" width="48" height="60" />
</a>
<a id="QD">
    <img src="images/QD.png" width="48" height="60" />
</a>
<a id="JD">
    <img src="images/JD.png" width="48" height="60" />
</a>
<a id="10D">
    <img src="images/10D.png" width="48" height="60" />
</a>
<a id="9D">
    <img src="images/9D.png" width="48" height="60" />
</a>
<a id="8D">
    <img src="images/8D.png" width="48" height="60" />
</a>
<a id="7D">
    <img src="images/7D.png" width="48" height="60" />
</a>
<a id="6D">
    <img src="images/6D.png" width="48" height="60" />
</a>
<a id="5D">
    <img src="images/5D.png" width="48" height="60" />
</a>
<a id="4D">
    <img src="images/4D.png" width="48" height="60" />
</a>
<a id="3D">
    <img src="images/3D.png" width="48" height="60" />
</a>
<a id="2D">
    <img src="images/2D.png" width="48" height="60" />
</a>
<p></p>
<button id="btnRandomCard" onclick="DealRandomCard()">Random</button>

<script>
var cardIds = [
        'AC', 'KC', 'QC', 'JC', '10C', '9C', '8C', '7C', '6C', '5C', '4C', '3C', '2C',
        'AS', 'KS', 'QS', 'JS', '10S', '9S', '8S', '7S', '6S', '5S', '4S', '3S', '2S',
        'AD', 'KD', 'QD', 'JD', '10D', '9D', '8D', '7D', '6D', '5D', '4D', '3D', '2D',
        'AH', 'KH', 'QH', 'JH', '10H', '9H', '8H', '7H', '6H', '5H', '4H', '3H', '2H'];

    cardIds.forEach(AddEventListeners);
    function AddEventListeners(item, index) {
        var btnCard = document.getElementById(item);
        btnCard.addEventListener('click', function () {
            DealCard(this, item);
        });
    }

    //remove the card that was dealt
    function RemoveCardFromCardIds(cardId) {
        this.cardIds.splice(this.cardIds.indexOf(cardId), 1);
        //alert(cardId + " removed");
    }

    function HideAllCardButtons()
    {
        var i;
        for (i = 0; i < this.cardIds.length; i++)
        {
            var cardButton = document.getElementById(this.cardIds[i]);
            cardButton.style.display = "none";
        }
        var randButton = document.getElementById('btnRandomCard');
        randomButton.style.display = "hidden"; //todo this doesn't work
    }

    //hide the card buttons that have been used
    this.PossiblyHideDealtCardButtons();
    function PossiblyHideDealtCardButtons()
    {
        @{
            if (!String.IsNullOrEmpty(Model.River))
            {
                <text>
                this.HideAllCardButtons();
                return;
                </text>
            }

            var cardsUsed = new List<string>();
            if (!String.IsNullOrEmpty(Model.Card0) &&
            !String.IsNullOrEmpty(Model.Card1))
            {
                cardsUsed.Add(Model.Card0);
                cardsUsed.Add(Model.Card1);
            }

            if(!String.IsNullOrEmpty(Model.Flop0) &&
            !String.IsNullOrEmpty(Model.Flop1) &&
            !String.IsNullOrEmpty(Model.Flop2))
            {
                cardsUsed.Add(Model.Flop0);
                cardsUsed.Add(Model.Flop1);
                cardsUsed.Add(Model.Flop2);
            }
            if (!String.IsNullOrEmpty(Model.Turn))
            {
                cardsUsed.Add(Model.Turn);
            }

            //tried to set currentCard number here
            //int cardsUsedCount = cardsUsed.Count;
            //<text>
            //var countJson = @Html.Raw(Json.Serialize(@cardsUsedCount));
            //document.getElementById('test').innerHTML = countJson;
            //this.currentCard = parseInt(countJson);
            //</text>

            foreach (string cardId in cardsUsed)
            {
                <text>
                
                var cardIdJson = @Html.Raw(Json.Serialize(@cardId));
                //remove from card ids
                this.RemoveCardFromCardIds(cardIdJson);

                //hide the card button
                var cardButton = document.getElementById(cardIdJson);
                cardButton.style.display = "none";
                </text>
            }
        }
    }

    var currentCard = 0; //the current card number that is being dealt
    function DealCard(cardButton, cardId) {
        if (this.currentCard == 0) {
            this.PossiblySetCurrentCardNumber();
        }

        this.RemoveCardFromCardIds(cardId);
        //hide the button
        cardButton.style.display = "none";
        //todo this doesn't work
        //cardButton.disabled = true;
        var cardImage = document.getElementById('myCard' + this.currentCard);
        var cardhiddenElement = document.getElementById('myCardHidden' + this.currentCard);
        var imgSource = "images/" + cardId + ".png";
        cardImage.src = imgSource;
        cardhiddenElement.value = cardId;
        this.currentCard++;
        this.PossiblyAutoSubmitForm();
    }

    function PossiblySetCurrentCardNumber() {
        @if (!String.IsNullOrEmpty(Model.Card0) &&
          !String.IsNullOrEmpty(Model.Card1) &&
          !String.IsNullOrEmpty(Model.Flop0) &&
          !String.IsNullOrEmpty(Model.Flop1) &&
          !String.IsNullOrEmpty(Model.Flop2) &&
          !String.IsNullOrEmpty(Model.Turn))
        {
            <text>
            this.currentCard = 6;
            </text>
        }
        else if (!String.IsNullOrEmpty(Model.Card0) &&
            !String.IsNullOrEmpty(Model.Card1) &&
            !String.IsNullOrEmpty(Model.Flop0) &&
            !String.IsNullOrEmpty(Model.Flop1) &&
            !String.IsNullOrEmpty(Model.Flop2))
        {
            <text>
            this.currentCard = 5;
            </text>
        }
        else if (!String.IsNullOrEmpty(Model.Card0) &&
            !String.IsNullOrEmpty(Model.Card1))
        {
            <text>
            this.currentCard = 2;
            </text>
        }
    }

    //auto submit after each round
    function PossiblyAutoSubmitForm() {
        if (this.currentCard == 2 ||
            this.currentCard == 5 ||
            this.currentCard == 6 ||
            this.currentCard == 7 ) {
            document.getElementById('myForm').submit();
        }
    }

    function DealRandomCard()
    {
        var len = this.cardIds.length;
        //alert("current length of cardIds is "+len);
        var randomInt = this.GetRndInteger(0, len - 1);
        var cardId = this.cardIds[randomInt];
        var cardButton = document.getElementById(cardId);
        this.DealCard(cardButton, cardId);
    }

    function GetRndInteger(min, max)
    {
        return Math.floor(Math.random() * (max - min)) + min;
    }
</script>

<button>Reset (todo)</button>
<p>Rank: @Model.HandRank</p>
<p>Current Round: @Model.CurrentRound</p>
<p>Probabilities</p>
<p>High Card: @Model.ChanceHighCard%</p>
<p>Pair: @Model.ChancePair%</p>
<p>Two Pair: @Model.ChanceTwoPair%</p>
<p>Three of a Kind: @Model.ChanceThreeKind%</p>
<p>Straight: @Model.ChanceStraight%</p>
<p>Flush: @Model.ChanceFlush%</p>
<p>Full House: @Model.ChanceFullHouse%</p>
<p>Four of a Kind: @Model.ChanceFourKind%</p>
<p>Straight Flush: @Model.ChanceStraightFlush%</p>
<p>Royal Flush: @Model.ChanceRoyalFlush%</p>

